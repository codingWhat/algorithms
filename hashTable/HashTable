//hashTable

//hash冲突解决方式:
//1.链表法(取出当前节点next ,将新节点next->head指针next, head指针指向新节点); 实现方式:数组+单链表
//2.开放寻址法, 若数组节点上存在数据，则往下继续探测到空闲节点为止(跳过删除节点);   实现方式:数组


工业级散列表,需要满足以下特性:
1.支持的快速的插入、查询、删除操作.
2.内存占用合理,不能浪费过多内存空间
3.性能稳定, 极端情况下，散列表的性能也不会退化到无法接受的情况

设计工业级散列表，需要从一下几点着手:
1.设计一个合适的散列函数
2.定义装载因子阀值，并且设计动态扩容策略
3.选择合适的散列冲突解决办法

